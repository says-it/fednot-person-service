openapi: 3.1.0
info:
  title: person-service-api
  version: 1.0.0-alpha.1
  summary: Person Service API
  description: Person Service API
  contact:
    name: Fednot
    email: api@fednot.be
    url: https://www.fednot.be
  license:
    name: unlicensed
    url: https://www.fednot.be
servers:
  - url: http://localhost:3000
paths:
  /persons:
    post:
      operationId: post-persons
      summary: Create a person.
      description: Creates a person.
      tags:
        - Person
      requestBody:
        $ref: '#/components/requestBodies/CreatePersonRequest'
      responses:
        '201':
          $ref: '#/components/responses/PersonResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
components:
  schemas:
    PersonCreate:
      title: PersonCreate
      type: object
      required:
        - nrn
      properties:
        nrn:
          type: string
          description: The NRN of the person
    ErrorDetail:
      title: ErrorDetail
      type: object
      properties:
        resource:
          type: string
          description: Identifies the resource/location where the error occurred.
          readOnly: true
        field:
          type: string
          description: Identifies the specific field causing the error.
          readOnly: true
        detail:
          type: string
          description: Detailed description of the error.
          readOnly: true
        code:
          type: string
          description: |
            Indicates the type of problem detected with the specified field. Some possible values:
            * missing
            * invalid
          readOnly: true
    Error:
      title: Error
      description: |-
        All the errors are returned in the same standard format and contain at least the following fields. Additional fields could be included depending on the error.
        * __type__ 
          Identifies the error type.
        * __title__ 
          Title of this error.
        * __detail__ 
          Additional details/description of the error.
        * __instance__ 
          A unique identifier for this error.
        * __timestamp__ 
          The time at which this error occurred.
        * __status__
          The status code of the error.

        As specified the errors returned are always accompanied by an error type. This error type identifies the type of error in hierarchical fashion. As an example the following error type; '/error/client/technical/unauthorized' indicates that this error is a technical client error preventing the authorization of the request, e.g the client did not provide a username. The precise nature of the error can usually be found in the details field.
        A number of errors are generic errors that can be returned for each resource;
        * /error/client/technical/**malformed**
          * Request contains malformed JSON
        * /error/client/technical/**unauthorized**
          * Missing identity headers
        * /error/client/technical/**methodnotallowed**
          * Attempting to use a method that is not available for the specified resource
        * /error/client/technical/**unsupportedmedia**
          * The payload was provided in an unsupported format. (Content-Type not supported)
        * /error/client/technical/**ratelimit**
          * Too many requests per time unit.
        * /error/client/technical/**notfound**
          * The requested resource could not be found.
        * /error/client/technical/**largerequest**
          * The request exceeded the maximum request size.
        * /error/client/technical/**validation**
          * Missing fields, fields containing invalid values, etc
        * /error/server/**technical**
          * An unexpected error occurred.
        * /error/server/technical/**unavailable**
          * The service is temporarily unavailable.
      type: object
      required:
        - timestamp
        - title
        - type
        - detail
        - instance
        - status
      properties:
        timestamp:
          type: string
          format: date-time
          description: Time at which the error occurred.
          readOnly: true
        title:
          type: string
          description: Short description of the error that occurred.
          readOnly: true
        type:
          type: string
          description: Provides a readable hierarchical description of the error type (akin to an error code).
        detail:
          type: string
          description: A more detailed description of the error that occurred.
          readOnly: true
        instance:
          type: string
          description: Unique identifier for this error, typically contains a transaction identifier.
          readOnly: true
        status:
          type: integer
          format: int32
          description: References the HTTP status code associated with this error.
        errors:
          type: array
          description: Provides more detailed description of the errors that occurred. Useful when e.g more than one validation error was detected.
          items:
            $ref: '#/components/schemas/ErrorDetail'
          readOnly: true
    ModelMetaData:
      title: ModelMetaData
      type: object
      description: Metadata about any resource being retrieved from the server
      properties:
        createdAt:
          description: Date and time of when the resource was initially created.  Immutable during for the entire resource lifecycle
          type: string
          format: date-time
          readOnly: true
        modifiedAt:
          description: Date and time of when the resource was last modified.
          type: string
          format: date-time
    BaseModel:
      title: BaseModel
      type: object
      required:
        - id
        - resourceType
        - meta
      properties:
        id:
          type: string
          description: The unique identifier of the resource.
          example: '123'
        resourceType:
          type: string
          description: The type of the resource
        meta:
          $ref: '#/components/schemas/ModelMetaData'
    Person:
      title: Dossier
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - $ref: '#/components/schemas/PersonCreate'
        - type: object
          properties:
            name:
              type: string
              description: Name of the person
  requestBodies:
    CreatePersonRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PersonCreate'
  responses:
    ErrorResponse:
      description: Error response object returned for each server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    PersonResponse:
      description: The person.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Person'
